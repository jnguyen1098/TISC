[1mdiff --git a/include/TISC.h b/include/TISC.h[m
[1mindex 0409208..f77fd4f 100644[m
[1m--- a/include/TISC.h[m
[1m+++ b/include/TISC.h[m
[36m@@ -1,6 +1,11 @@[m
 /**[m
  * @file TISC.h[m
  * @author Jason Nguyen[m
[32m+[m[32m *[m
[32m+[m[32m * @mainpage[m
[32m+[m[32m * This file holds definitions to the functions used in TISC.[m
[32m+[m[32m * As such, it should be treated as the front-facing interface.[m
[32m+[m[32m *[m
  * @date March 2021[m
  * @brief TISC function signatures.[m
  */[m
[36m@@ -10,12 +15,20 @@[m
 [m
 #include "TISC_defs.h"[m
 [m
[32m+[m[32m#include <stdbool.h>[m
[32m+[m
[32m+[m[32m// pre post param return see[m
[32m+[m
 /**[m
[31m- * Get character[m
[31m- * [m
[31m- * @pre Stream exists[m
[31m- * @post Stream may or may not exist[m
[31m- **/[m
[31m-void getCh(void);[m
[32m+[m[32m * Consumes line input until current character is non-blank.[m
[32m+[m[32m *[m
[32m+[m[32m * @post    Line buffer iterator will either point to a non-[m
[32m+[m[32m *          blank character and sent it to the current char[m
[32m+[m[32m *          variable, or will stop at the NULL-terminator[m
[32m+[m[32m *[m
[32m+[m[32m * @return  true if non-blank character exists[m
[32m+[m[32m *          false if NULL-terminator is reached instead[m
[32m+[m[32m */[m
[32m+[m[32mbool consume_buf_until_non_blank(void);[m
 [m
 #endif[m
[1mdiff --git a/include/TISC_defs.h b/include/TISC_defs.h[m
[1mindex 04d9ca4..5c2597a 100644[m
[1m--- a/include/TISC_defs.h[m
[1m+++ b/include/TISC_defs.h[m
[36m@@ -1,6 +1,12 @@[m
 /**[m
  * @file TISC_defs.h[m
  * @author Jason Nguyen[m
[32m+[m[32m *[m
[32m+[m[32m * @mainpage[m
[32m+[m[32m * This file may not exist in the future. It is supposed to house[m
[32m+[m[32m * definitions, but honestly I may just separate this into a file[m
[32m+[m[32m * full of constants/macros and then another file for structs/enums.[m
[32m+[m[32m *[m
  * @date March 2021[m
  * @brief TISC consts/structs/enums[m
  */[m
[1mdiff --git a/src/TISC.c b/src/TISC.c[m
[1mindex 0276145..1a83bd9 100644[m
[1m--- a/src/TISC.c[m
[1m+++ b/src/TISC.c[m
[36m@@ -70,9 +70,9 @@[m [mvoid getCh (void)[m
     curr_char = line_buf[++inCol] ? line_buf[inCol] : ' ';[m
 }[m
 [m
[31m-/********************************************/[m
[31m-bool nonBlank (void)[m
[32m+[m[32mbool consume_buf_until_non_blank(void)[m
 { [m
[32m+[m[32m    // TODO: this function has to die in the global exodus[m
     while (line_buf[inCol] == ' ')[m
         inCol++;[m
 [m
[36m@@ -83,7 +83,7 @@[m [mbool nonBlank (void)[m
     }[m
     else[m
     { [m
[31m-        curr_char = ' ' ;[m
[32m+[m[32m        curr_char = ' ';[m
         return false;[m
     }[m
 }[m
[36m@@ -98,14 +98,14 @@[m [mint getNum (void)[m
     do[m
     { [m
         sign = 1;[m
[31m-        while ( nonBlank() && ((curr_char == '+') || (curr_char == '-')) )[m
[32m+[m[32m        while (consume_buf_until_non_blank() && ((curr_char == '+') || (curr_char == '-')) )[m
         { [m
             temp = false;[m
             if (curr_char == '-')  sign = - sign ;[m
             getCh();[m
         }[m
         term = 0 ;[m
[31m-        nonBlank();[m
[32m+[m[32m        consume_buf_until_non_blank();[m
         while (isdigit(curr_char))[m
         { [m
             temp = true;[m
[36m@@ -113,7 +113,7 @@[m [mint getNum (void)[m
             getCh();[m
         }[m
         num = num + (term * sign) ;[m
[31m-    } while ( (nonBlank()) && ((curr_char == '+') || (curr_char == '-')) ) ;[m
[32m+[m[32m    } while ( (consume_buf_until_non_blank()) && ((curr_char == '+') || (curr_char == '-')) ) ;[m
     return temp;[m
 }[m
 [m
[36m@@ -122,7 +122,7 @@[m [mint getWord (void)[m
 { [m
     int temp = false;[m
     int length = 0;[m
[31m-    if (nonBlank ())[m
[32m+[m[32m    if (consume_buf_until_non_blank())[m
     { [m
         while (isalnum(curr_char))[m
         { [m
[36m@@ -140,7 +140,7 @@[m [mint skipCh ( char c  )[m
 {[m
 [m
     bool temp = false;[m
[31m-    if ( nonBlank() && (curr_char == c) )[m
[32m+[m[32m    if ( consume_buf_until_non_blank() && (curr_char == c) )[m
     { [m
         getCh();[m
         temp = true;[m
[36m@@ -148,11 +148,10 @@[m [mint skipCh ( char c  )[m
     return temp;[m
 } /* skipCh */[m
 [m
[31m-/********************************************/[m
 int atEOL(void)[m
 { [m
[31m-    return ( ! nonBlank ());[m
[31m-} /* atEOL */[m
[32m+[m[32m    return ( !consume_buf_until_non_blank());[m
[32m+[m[32m}[m
 [m
 /********************************************/[m
 int error(char *msg, int lineNo, int instNo)[m
[36m@@ -189,7 +188,7 @@[m [mint readInstructions (FILE *pgm)[m
         buf_len = strlen(line_buf) - 1;[m
         if (line_buf[buf_len]=='\n') line_buf[buf_len] = '\0';[m
         else line_buf[++buf_len] = '\0';[m
[31m-        if ( (nonBlank()) && (line_buf[inCol] != '*') )[m
[32m+[m[32m        if ( (consume_buf_until_non_blank()) && (line_buf[inCol] != '*') )[m
         { [m
             if (! getNum())[m
                 return error("Bad location", lineNo,-1);[m
